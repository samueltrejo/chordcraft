IDEAS TO IMPROVE CHORDCRAFT
Add a feature that allows users to collaborate on songwriting projects in real-time. This could include a chat function and the ability to share and edit lyrics and chords simultaneously.

Add a feature that suggests chord progressions based on the lyrics that have been written. This could help users who are stuck on a particular section of a song.

Allow users to save multiple versions of a song and switch between them easily. This could be useful for comparing different versions of a song and deciding which one to use.

Create a system where users can save songs to different projects, such as a solo project or a band project.

Add a feature that allows users to export their lyrics and chords in a variety of file formats, such as PDF or MusicXML, so they can be used in other music notation software.

Create a feature that allows users to search for and find songs based on certain parameters such as genre, mood and lyrics.

Create a feature for users to share their songs on social media, or to embed their songs on other websites.

Offer a paid subscription service that includes additional features such as advanced chord suggestions, melody generation, and access to a larger library of chord progressions.

Create a feature that allows users to add audio recordings or MIDI files to their songs, so they can hear how they sound.

Create a mobile app version of your website, so users can access their songs and lyrics on the go.


FIREBASE RULES
{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth.uid === $uid",
        ".write": "auth.uid === $uid"
      }
    },
    "songs": {
      ".indexOn": ["user_id"],
      "$song_id": {
        ".read": "data.child('user_id').val() === auth.uid",
        ".write": "data.child('user_id').val() === auth.uid"
      }
    },
    "shared_songs": {
      "$song_id": {
        ".read": "data.child('user_ids').hasChild(auth.uid)",
        ".write": "data.child('user_ids').hasChild(auth.uid)"
      }
    }
  }
}

{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth.uid === $uid",
        ".write": "auth.uid === $uid"
      }
    },
    "songs": {
      ".indexOn": "user_id",
      ".read": "auth.uid !== null &&
      					query.orderByChild === 'user_id' &&
                query.equalTo === auth.uid",
      "$song_id": {
        ".read": true
      },
      ".write": "auth.uid !== null"
    },
    "shared_songs": {
      ".read": true,
      "$song_id": {
        ".read": "auth.uid !== null &&
      					query.orderByChild === 'user_ids' &&
                query.equalTo === auth.uid",
        ".write": "data.child('user_ids').hasChild(auth.uid)"
      }
    }
  }
}